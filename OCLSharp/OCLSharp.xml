<?xml version="1.0"?>
<doc>
    <assembly>
        <name>OCLSharp</name>
    </assembly>
    <members>
        <member name="T:OCLSharp.Attributes.ConstantAttribute">
            <summary>
            Marks a memory pointer as belonging to the __constant address space
            </summary>
        </member>
        <member name="T:OCLSharp.Attributes.GlobalAttribute">
            <summary>
            Marks a memory pointer as belonging to the __global address space
            </summary>
        </member>
        <member name="T:OCLSharp.Attributes.KernelAttribute">
            <summary>
            Marks a method as an OpenCL Kernel
            </summary>
        </member>
        <member name="T:OCLSharp.Attributes.LocalAttribute">
            <summary>
            Marks a memory pointer as belonging to the __local address space
            </summary>
        </member>
        <member name="T:OCLSharp.Attributes.NonKernelAttribute">
            <summary>
            Marks a method as an OpenCL Kernel
            </summary>
        </member>
        <member name="T:OCLSharp.Emulator`1">
            <summary>
            Emulates C# code as if it was OpenCL
            Note that this is VERY inefficient and slow and only meant for debugging purposes
            </summary>
        </member>
        <member name="M:OCLSharp.Emulator`1.#ctor(System.Int32[],System.Int32[])">
            <summary>
            Create a new emulator
            </summary>
        </member>
        <member name="M:OCLSharp.Emulator`1.CalculateWorkGroupCount">
            <summary>
            Calculate work group count in all dimensions
            </summary>
        </member>
        <member name="M:OCLSharp.Emulator`1.PadDimArray(System.Int32[])">
            <summary>
            Add padding to dimension array and set empty elements to 1
            </summary>
        </member>
        <member name="M:OCLSharp.Emulator`1.Run(System.String,System.Object[])">
            <summary>
            Run kernel by name
            </summary>
        </member>
        <member name="M:OCLSharp.Emulator`1.RunWorkGroup(System.Int32[],System.String,`0,System.Object[])">
            <summary>
            Run a specific work group in a kernel on a program
            </summary>
        </member>
        <member name="M:OCLSharp.Emulator`1.RunWorkItem(OCLSharp.WorkItemArgs,System.String,System.Object[],`0)">
            <summary>
            Start a work item
            </summary>
        </member>
        <member name="M:OCLSharp.Emulator`1.CombineArgs(OCLSharp.WorkItemArgs,System.Object[])">
            <summary>
            Combine work items args with kernel args
            </summary>
        </member>
        <member name="M:OCLSharp.Emulator`1.GetWorkItemArgs(System.Int32[])">
            <summary>
            Get work items arguments
            </summary>
        </member>
        <member name="M:OCLSharp.Emulator`1.GetWorkGroupIDs">
            <summary>
            Get work group IDs
            </summary>
        </member>
        <member name="T:OCLSharp.OpenCL.Program.OpenCLProgram">
            <summary>
            OpenCL program
            </summary>
            <summary>
            Base class for an OpenCL program
            </summary>
        </member>
        <member name="M:OCLSharp.OpenCL.Program.OpenCLProgram.Initialize(System.Int32[],System.Int32[])">
            <summary>
            Set program settings
            </summary>
        </member>
        <member name="T:OCLSharp.OpenCL.Program.OpenCLFunctions">
            <summary>
            Please download the full method specification from here: https://www.khronos.org/registry/OpenCL/specs/2.2/pdf/OpenCL_C.pdf
            </summary>
            <typeparam name="T"></typeparam>
            <summary>
            Please download the full method specification from here: https://www.khronos.org/registry/OpenCL/specs/2.2/pdf/OpenCL_C.pdf
            </summary>
            <typeparam name="T"></typeparam>
            <summary>
            Please download the full method specification from here: https://www.khronos.org/registry/OpenCL/specs/2.2/pdf/OpenCL_C.pdf
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:OCLSharp.OpenCL.Program.OpenCLFunctions.get_global_id(System.Int32)">
            <summary>
            Global work item ID value
            </summary>
            <param name="dimindx">The dimindx.</param>
            <returns></returns>
        </member>
        <member name="M:OCLSharp.OpenCL.Program.OpenCLFunctions.get_work_dim">
            <summary>
            Number of dimensions in use
            </summary>
            <returns></returns>
        </member>
        <member name="M:OCLSharp.OpenCL.Program.OpenCLFunctions.get_global_size(System.Int32)">
            <summary>
            Number of global work items
            </summary>
            <param name="dimindx">The dimindx.</param>
            <returns></returns>
        </member>
        <member name="M:OCLSharp.OpenCL.Program.OpenCLFunctions.get_local_id(System.Int32)">
            <summary>
            Local work item ID
            </summary>
            <param name="dimindx">The dimindx.</param>
            <returns></returns>
        </member>
        <member name="M:OCLSharp.OpenCL.Program.OpenCLFunctions.get_local_size(System.Int32)">
            <summary>
            Number of local work items
            </summary>
            <param name="dimindx">The dimindx.</param>
            <returns></returns>
        </member>
        <member name="M:OCLSharp.OpenCL.Program.OpenCLFunctions.get_num_groups(System.Int32)">
            <summary>
            Number of work groups
            </summary>
            <param name="dimindx">The dimindx.</param>
            <returns></returns>
        </member>
        <member name="M:OCLSharp.OpenCL.Program.OpenCLFunctions.get_group_id(System.Int32)">
            <summary>
            Work group ID
            </summary>
            <param name="dimindx">The dimindx.</param>
            <returns></returns>
        </member>
        <member name="M:OCLSharp.OpenCL.Program.OpenCLFunctions.get_global_offset(System.Int32)">
            <summary>
            Returns the offset values specified in global_work_offset argument to clEnqueueNDRangeKernel. Valid values of dimindx are 0 to get_work_dim() - 1. For other values, get_global_offset() returns 0.
            For clEnqueueTask, this returns 0.
            </summary>
            <param name="dimindx">The dimindx.</param>
            <returns></returns>
        </member>
        <member name="T:OCLSharp.Translator">
            <summary>
            Translator that translated C# to OpenCL
            </summary>
        </member>
        <member name="M:OCLSharp.Translator.#ctor">
            <summary>
            Create an empty <see cref="T:OCLSharp.Translator"/>
            </summary>
        </member>
        <member name="M:OCLSharp.Translator.#ctor(System.String)">
            <summary>
            Create a new <see cref="T:OCLSharp.Translator"/> from C# source code
            </summary>
            <param name="csCode">Code in C# language</param>
        </member>
        <member name="M:OCLSharp.Translator.Translate">
            <summary>
            Translates C# code to OpenCL
            </summary>
            <returns>OpenCL code</returns>
        </member>
        <member name="M:OCLSharp.Translator.IsRowComment(System.Int32,System.String)">
            <summary>
            Check if the code on this index is row comment or not
            </summary>
        </member>
        <member name="M:OCLSharp.Translator.FindClasses(System.String)">
            <summary>
            Returns all classes in a code
            </summary>
        </member>
        <member name="M:OCLSharp.Translator.FindConstantFields(System.String)">
            <summary>
            Returns all classes in a code
            </summary>
        </member>
        <member name="M:OCLSharp.Translator.FindNonKernels(System.String)">
            <summary>
            Returns all classes in a code
            </summary>
        </member>
        <member name="M:OCLSharp.Translator.FindKernels(System.String)">
            <summary>
            Returns all classes in a code
            </summary>
        </member>
        <member name="M:OCLSharp.Translator.FindKernel(System.String,System.Int32)">
            <summary>
            Find class!
            </summary>
        </member>
        <member name="M:OCLSharp.Translator.FindConstantField(System.String,System.Int32)">
            <summary>
            Find constant field
            </summary>
        </member>
        <member name="M:OCLSharp.Translator.FindClass(System.String,System.Int32)">
            <summary>
            Find class!
            </summary>
        </member>
        <member name="M:OCLSharp.Translator.GetLines(System.String)">
            <summary>
            Split code into lines
            </summary>
        </member>
        <member name="M:OCLSharp.Translator.CommentSplit(System.String)">
            <summary>
            Split code into array based on comment start and end
            </summary>
        </member>
        <member name="T:OCLSharp.WorkItemArgs">
            <summary>
            Arguments for work items, used only for emulation
            </summary>
        </member>
    </members>
</doc>
